version: "3.3"

services:
  db:
    restart: always
    image: mysql:8.0
    container_name: mlflow_db
    ports:
      - "${MYSQL_PORT}:${MYSQL_PORT}"
    networks:
      - frontend
      - backend
    environment:
      - MYSQL_ROOT_PASSWORD=root_password
      - MYSQL_USER=${MYSQL_USER}
      - MYSQL_PASSWORD=${MYSQL_PASSWORD}
      - MYSQL_DATABASE=${MYSQL_DATABASE}
    volumes:
      - ./db_data:/var/lib/mysql

  s3:
    restart: always
    image: minio/minio
    container_name: mlflow_minio
    volumes:
      - ./minio_data:/data
    ports:
      - "${MINIO_PORT}:9000"
      - "${MINIO_CONSOLE_PORT}:9001"
    networks:
      - frontend
      - backend
    environment:
      - MINIO_ROOT_USER=${MINIO_ROOT_USER}
      - MINIO_ROOT_PASSWORD=${MINIO_ROOT_PASSWORD}
      - MINIO_ADDRESS=${MINIO_ADDRESS}
      - MINIO_PORT=${MINIO_PORT}
      - MINIO_STORAGE_USE_HTTPS=${MINIO_STORAGE_USE_HTTPS}
      - MINIO_CONSOLE_ADDRESS=${MINIO_CONSOLE_ADDRESS}
    command: server /data
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 30s
      timeout: 20s
      retries: 3

  tracking_server:
    restart: always
    build: ./mlflow
    image: mlflow_server
    container_name: mlflow_server
    depends_on:
      - db
    ports:
      - "${MLFLOW_PORT}:5000"
    networks:
      - frontend
      - backend
    environment:
      - AWS_ACCESS_KEY_ID=${MINIO_ACCESS_KEY}
      - AWS_SECRET_ACCESS_KEY=${MINIO_SECRET_ACCESS_KEY}
      - MLFLOW_S3_ENDPOINT_URL=http://s3:${MINIO_PORT}
      - MLFLOW_S3_IGNORE_TLS=true
    command: >
      mlflow server
      --backend-store-uri mysql+pymysql://${MYSQL_USER}:${MYSQL_PASSWORD}@db:${MYSQL_PORT}/${MYSQL_DATABASE}
      --host 0.0.0.0
      --serve-artifacts
      --artifacts-destination s3://${MLFLOW_BUCKET_NAME}
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:${MLFLOW_PORT}/"]
      interval: 30s
      timeout: 10s
      retries: 3

  mongodb:
    restart: always
    image: mongo:5.0
    container_name: mlflow_mongodb
    ports:
      - "${MONGO_PORT}:27017"
    networks:
      - frontend
      - backend
    environment:
      - MONGO_INITDB_ROOT_USERNAME=${MONGO_INITDB_USER}
      - MONGO_INITDB_ROOT_PASSWORD=${MONGO_INITDB_PASSWORD}
    volumes:
      - ./mongo_data:/data/db

  mongo-express:
    restart: always
    image: mongo-express
    container_name: mlflow_mongo_express
    ports:
      - "${MONGO_EXPRESS_PORT}:8081"
    networks:
      - frontend
      - backend
    environment:
      - ME_CONFIG_MONGODB_ADMINUSERNAME=${MONGO_INITDB_USER}
      - ME_CONFIG_MONGODB_ADMINPASSWORD=${MONGO_INITDB_PASSWORD}
      - ME_CONFIG_MONGODB_SERVER=mongodb

volumes:
  db_data:
  minio_data:
  mongo_data:

networks:
  frontend:
    driver: bridge
  backend:
    driver: bridge
